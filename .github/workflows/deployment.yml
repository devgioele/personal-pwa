name: Deployment
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://devgio.xyz
    # Default parameters
    defaults:
      # For steps using 'run'
      run:
        working-directory: deployment/terraform
    steps:
      - name: Load source code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
      - name: Extract output of Terraform Apply
        run: |
          echo "PROJECT_ID=$(terraform output -raw project_id)" >> $GITHUB_ENV
          echo "INSTANCE_NAME=$(terraform output -raw instance_name)" >> $GITHUB_ENV
          echo "COMPUTE_ZONE=$(terraform output -raw compute_zone)" >> $GITHUB_ENV
          echo "GCP_CREDS=$(terraform output -raw gcp_creds)" >> $GITHUB_ENV
      - name: Copy source code
        uses: actions-hub/gcloud@master
        env:
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDS }}
          # The env variable PROJECT_ID is set by the step above
        with:
          # 'force-key-file-overwrite' overwrites the SSH keys without asking for confirmation
          args: >
            compute scp ${{ env.GITHUB_WORKSPACE }}/ ${{ env.INSTANCE_NAME }}:~/deployment-${{ env.GITHUB_RUN_NUMBER }}
            --zone=${{ env.COMPUTE_ZONE }} --recurse
      - name: Build and start
        uses: actions-hub/gcloud@master
        with:
          # 1. ssh into the instance
          # 2. export GitHub secrets as env vars
          # 3. run the startup script
          args: >
            compute ssh ${{ steps.apply.outputs.instance_id }} --command
            'export TOR_PRIVATE_KEY=${{ secrets.TOR_PRIVATE_KEY }} &&
            ./deployment/startup.sh'